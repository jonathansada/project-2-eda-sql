-- Database is not included in the GitHub repo (due to file size restrictions)
-- To execute this query database must be generated by executing all the cells in w3-project.ipynb


-- 1. How do song properties affects their popularity?
-- Answered in the Bivariate Analysis

-- 2. How popular are acoustic songs compared to the AVG?
-- Assuming instrumental is an acousticness of 0.9 or more
SELECT (SELECT AVG(popularity) as popularity FROM songs WHERE acousticness >= 0.9) AS acoustic_popularity ,
	   (SELECT AVG(popularity) as popularity FROM songs) AS avg_popularity;

-- 3. How popular are instrumental songs compared to the AVG?
-- Assuming instrumental is an instrumentalness of 0.9 or more
SELECT (SELECT AVG(popularity) as popularity FROM songs WHERE instrumentalness >= 0.9) AS instrumental_popularity ,
	   (SELECT AVG(popularity) as popularity FROM songs) AS avg_popularity;

-- 4. How popular are live songs compared to the AVG?
-- Assuming instrumental is an liveness of 0.9 or more
SELECT (SELECT AVG(popularity) as popularity FROM songs WHERE liveness >= 0.9) AS live_popularity ,
	   (SELECT AVG(popularity) as popularity FROM songs) AS avg_popularity;

-- 5. What are the most popular songs?
SELECT  name, artists, AVG(popularity) as avg_popularity 
FROM songs  
GROUP BY spotify_id 
ORDER BY avg_popularity DESC, continent DESC 
LIMIT 5;

-- 6. What are the 5 most popular songs in Europe
SELECT continent, name, artists, AVG(popularity) as avg_popularity 
FROM songs  
WHERE continent = "EU" 
GROUP BY spotify_id, continent 
ORDER BY avg_popularity DESC, continent DESC 
LIMIT 5;
	   
-- 7. What are the most popular songs songs per continent?
SELECT s.continent, s.name, s.artists, MAX(s.avg_popularity) as popularity
FROM (
	SELECT s1.spotify_id, s1.name, s1.artists, AVG(s1.popularity) as avg_popularity, s1.continent
	FROM songs as s1  
	GROUP BY s1.spotify_id, s1.continent) as s
GROUP BY s.continent;

-- 8. What are the 5 most popular artist?
SELECT artists, AVG(popularity) as avg_popularity 
FROM songs 
GROUP BY artists 
ORDER BY avg_popularity DESC 
LIMIT 5;

-- 9. What are the properties of the songs of the most popular artists?
SELECT ("duration_ms" / 60000) as duration_min, "is_explicit", "danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "time_signature" 
FROM songs WHERE artists = (
	SELECT s2.artists 
	FROM songs as s2 
	GROUP BY s2.artists 
	ORDER BY AVG(s2.popularity) DESC 
	LIMIT 1
) GROUP BY spotify_id;

-- 10. How does song properties evolve across the time? (properties vs release date)
-- Leaving only the measures than can be calculated (exclude: is_explicit, mode, key, tempo)
SELECT strftime('%Y', datetime("album_release_date")) as year,
	  (AVG("duration_ms") / 60000) as "avg_duration_min", 
	  AVG("danceability") as "avg_danceability", 
	  AVG("energy") as "avg_energy", 
	  AVG("loudness") as "avg_loudness", 
	  AVG("speechiness") as "avg_speechiness", 
	  AVG("acousticness") as "avg_acousticness", 
	  AVG("instrumentalness") as "avg_instrumentalness", 
	  AVG("liveness") as "avg_liveness", 
	  AVG("valence") as "avg_valence", 
	  AVG("tempo") as "avg_tempo"
FROM songs 
GROUP BY year
ORDER BY year ASC;

-- 11. How does the time impact popularity? (popularity vs release date)
SELECT  strftime('%Y', datetime("snapshot_date")) as pop_year, strftime('%Y', datetime("album_release_date")) as release_year, AVG(popularity) as popularity
FROM songs
GROUP BY pop_year, release_year
ORDER BY pop_year ASC, release_year ASC;

-- 12. How many albums were released by the most popular artists?
SELECT s2.artists, count(DISTINCT s2.album_name) as album
FROM songs as s2
WHERE artists IN (
	SELECT s1.artists FROM songs as s1 GROUP BY s1.artists ORDER BY AVG(s1.popularity) DESC LIMIT 5
) GROUP BY s2.artists;

-- 13. When was the release of the first album of the most popular artist?
SELECT s2.artists, s2.album_name, strftime('%Y', datetime(MIN("album_release_date"))) as release_year
FROM songs as s2
WHERE artists IN (
	SELECT s1.artists FROM songs as s1 GROUP BY s1.artists ORDER BY AVG(s1.popularity) DESC LIMIT 5
) GROUP BY s2.artists;
